
/**
 * VideoPlayer.js v2.1.0
 * Standalone HTML5 Video Player
 * Usage: <script src="videoplayer.min.js"></script>
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e="undefined"!=typeof globalThis?globalThis:e||self).VideoPlayer=t()}(this,function(){"use strict";

// Include the compiled VideoPlayer class from lib/VideoPlayer.ts
// This would normally be generated by a build process
// For now, users can copy the lib/VideoPlayer.ts content directly

class VideoPlayer {
  // Copy the complete VideoPlayer class implementation here
  // This is a placeholder - the actual minified code would be much longer
  constructor(element, options = {}) {
    console.log('VideoPlayer initialized');
    // Implementation would be here
  }
}

// Auto-initialization
document.addEventListener('DOMContentLoaded', () => {
  const players = document.querySelectorAll('[data-video-player]');
  players.forEach(element => {
    try {
      const options = element.getAttribute('data-video-player');
      const config = options ? JSON.parse(options) : {};
      new VideoPlayer(element, config);
    } catch (error) {
      console.error('Failed to initialize VideoPlayer:', error);
    }
  });
});

// Global export
if (typeof window !== 'undefined') {
  window.VideoPlayer = VideoPlayer;
}

return VideoPlayer;
});
